name: X86 autobuild

on:
  #schedule:
  #  - cron: 0 08 * * *
  #  
  push:
    paths:
      - '.github/workflows/x86.yml'

  #   branches: 
  #     - master
  #watch:
  #  types: [started]
env:
  SSH_ACTIONS: true

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup & Eenvironment initialzation
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk

      - name: Checkout Source Code
        run: |
          git clone https://github.com/Lienol/openwrt

      - name: Add Passwall
        run: |
          cd openwrt
          echo -e '\nsrc-git Lienol https://github.com/SuLingGG/openwrt-package' >> feeds.conf.default
          ./scripts/feeds update -a
          rm -rf feeds/lienol/lienol/ipt2socks
          rm -rf feeds/lienol/lienol/shadowsocksr-libev
          rm -rf feeds/lienol/lienol/pdnsd-alt
          rm -rf feeds/lienol/package/verysync
          rm -rf feeds/lienol/lienol/luci-app-verysync
          rm -rf package/lean/luci-app-kodexplorer
          rm -rf package/lean/luci-app-pppoe-relay
          rm -rf package/lean/luci-app-pptp-server
          rm -rf package/lean/luci-app-v2ray-server
          ./scripts/feeds install -a


      - name: Add OpenClash
        run: |
          git clone https://github.com/vernesong/OpenClash.git
          mv OpenClash/luci-app-openclash openwrt/package
          cd openwrt/package/base-files/files
          mkdir -p etc/openclash/core && cd etc/openclash/core
          curl -L https://github.com/vernesong/OpenClash/releases/download/v0.38.1-beta/clash-linux-amd64.tar.gz |tar zxf -
          chmod +x clash


      - name: Custom configure file
        run: |
          cp diffconfig openwrt/.config
          cd openwrt
          sed -i 's/192.168.1.1/192.168.23.188/g' package/base-files/files/bin/config_generate


          #      - name: SSH connection to Actions
          #        uses: caoshijun/debugger-action@master
          #        if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')
          
      - name: Make default confige
        run: |
          cp -arf defconfig openwrt/.config

      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
          
      - name: Compile firmware
        run: |
          cd openwrt
          make -s -j$(($(nproc) + 1)) || make -j1 V=s
 
      - name: Prepare artifact
        run: |
          find ./openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}
          mkdir -p ./artifact/
          cp -ar ./openwrt/bin/targets ./artifact/
          cp ./openwrt/.config  ./artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_x86_64
          path: ./artifact/
